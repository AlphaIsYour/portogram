"use client";

import { useState, useEffect, useRef } from "react";
import { motion, AnimatePresence } from "framer-motion";
import {
  FaGithub,
  FaLinkedin,
  FaTwitter,
  FaEnvelope,
  FaArrowRight,
  FaCode,
  FaLaptopCode,
  FaServer,
} from "react-icons/fa";
import {
  SiNextdotjs,
  SiReact,
  SiTailwindcss,
  SiJavascript,
  SiTypescript,
  SiNodedotjs,
  SiMongodb,
  SiPostgresql,
} from "react-icons/si";

// Custom hook for intersection observer
const useIntersectionObserver = (
  options = {}
): [React.RefObject<HTMLDivElement>, boolean] => {
  const ref = useRef<HTMLDivElement>(null);
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    const currentRef = ref.current;
    const observer = new IntersectionObserver(([entry]) => {
      setIsVisible(entry.isIntersecting);
    }, options);

    if (currentRef) {
      observer.observe(currentRef);
    }

    return () => {
      if (currentRef) {
        observer.unobserve(currentRef);
      }
    };
  }, [options]);

  return [ref as React.RefObject<HTMLDivElement>, isVisible];
};

// Custom tooltip component
const Tooltip: React.FC<{ children: React.ReactNode; content: string }> = ({
  children,
  content,
}) => {
  const [isHovered, setIsHovered] = useState(false);

  return (
    <div
      className="relative inline-block"
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
    >
      {children}
      <AnimatePresence>
        {isHovered && (
          <motion.div
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 10 }}
            className="absolute z-10 px-3 py-2 text-sm text-white bg-blue-700 rounded shadow-lg -top-10 whitespace-nowrap left-1/2 transform -translate-x-1/2"
          >
            {content}
            <div className="absolute w-2 h-2 bg-blue-700 transform rotate-45 left-1/2 -translate-x-1/2 -bottom-1"></div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
};

// Project card component
interface ProjectCardProps {
  title: string;
  description: string;
  tech: string[];
  image?: string;
  link: string;
  delay?: number;
}

const ProjectCard: React.FC<ProjectCardProps> = ({
  title,
  description,
  tech,
  image,
  link,
  delay = 0,
}) => {
  const [intersectionRef, isVisible] = useIntersectionObserver({
    threshold: 0.2,
  });

  return (
    <motion.div
      ref={intersectionRef as React.RefObject<HTMLDivElement> | null}
      initial={{ opacity: 0, y: 50 }}
      animate={isVisible ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
      transition={{ duration: 0.5, delay }}
      className="relative overflow-hidden bg-white rounded-lg shadow-xl transition-all duration-300 hover:shadow-2xl hover:-translate-y-2 group"
    >
      <div className="overflow-hidden h-48">
        <div
          className="w-full h-full bg-blue-100 flex items-center justify-center text-blue-500 text-6xl transition-transform duration-500 group-hover:scale-110"
          style={{
            backgroundImage: image ? `url(${image})` : "none",
            backgroundSize: "cover",
            backgroundPosition: "center",
          }}
        >
          {!image && <FaLaptopCode />}
        </div>
      </div>
      <div className="p-6">
        <h3 className="text-xl font-bold text-blue-900 mb-2">{title}</h3>
        <p className="text-gray-600 mb-4">{description}</p>
        <div className="flex flex-wrap gap-2 mb-4">
          {tech.map((t, index) => (
            <span
              key={index}
              className="px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-700"
            >
              {t}
            </span>
          ))}
        </div>
        <a
          href={link}
          target="_blank"
          rel="noopener noreferrer"
          className="inline-flex items-center text-blue-700 hover:text-blue-500 transition-colors font-medium"
        >
          View Project <FaArrowRight className="ml-2" />
        </a>
      </div>
      <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-blue-400 to-blue-600"></div>
    </motion.div>
  );
};

// Skill component with tooltip
interface SkillProps {
  icon: React.ReactNode;
  name: string;
  level: string;
}

const Skill: React.FC<SkillProps> = ({ icon, name, level }) => {
  const [ref, isVisible] = useIntersectionObserver({ threshold: 0.2 });

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, scale: 0.8 }}
      animate={
        isVisible ? { opacity: 1, scale: 1 } : { opacity: 0, scale: 0.8 }
      }
      className="flex flex-col items-center"
    >
      <Tooltip content={`${name} - ${level}`}>
        <div className="w-16 h-16 flex items-center justify-center text-3xl text-blue-700 bg-white rounded-full shadow-md hover:shadow-lg transition-shadow">
          {icon}
        </div>
      </Tooltip>
      <span className="mt-2 text-sm text-white font-medium">{name}</span>
    </motion.div>
  );
};

// Main component
export default function HomePage() {
  const [isScrolled, setIsScrolled] = useState(false);
  const [activeSection, setActiveSection] = useState("home");
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  // Handle scroll events
  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 50);

      // Update active section based on scroll position
      const sections = ["home", "about", "skills", "projects", "contact"];

      for (const section of sections) {
        const element = document.getElementById(section);
        if (element) {
          const rect = element.getBoundingClientRect();
          if (rect.top <= 100 && rect.bottom >= 100) {
            setActiveSection(section);
            break;
          }
        }
      }
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const scrollToSection = (sectionId: string) => {
    const element = document.getElementById(sectionId);
    if (element) {
      window.scrollTo({
        top: element.offsetTop - 80,
        behavior: "smooth",
      });
    }
    setIsMenuOpen(false);
  };

  // Sample projects data
  const projects = [
    {
      title: "E-Commerce Platform",
      description:
        "A full-featured online shopping platform with cart functionality and payment integration.",
      tech: ["Next.js", "MongoDB", "Stripe", "Tailwind CSS"],
      link: "#",
    },
    {
      title: "Task Management App",
      description:
        "Collaborative task management system with real-time updates and notifications.",
      tech: ["React", "Firebase", "TypeScript", "Material UI"],
      link: "#",
    },
    {
      title: "Travel Blog",
      description:
        "Personal travel blog with dynamic content management and interactive maps.",
      tech: ["Next.js", "Sanity CMS", "Mapbox", "Tailwind CSS"],
      link: "#",
    },
    {
      title: "Weather Dashboard",
      description:
        "Interactive weather application with forecasts and historical data visualization.",
      tech: ["React", "Chart.js", "Weather API", "Styled Components"],
      link: "#",
    },
  ];

  return (
    <>
      {/* Custom cursor */}

      {/* Navigation */}
      <nav
        className={`fixed top-0 left-0 right-0 z-40 transition-all duration-300 ${
          isScrolled ? "bg-white shadow-md py-3" : "bg-transparent py-6"
        }`}
      >
        <div className="container mx-auto px-6 flex justify-between items-center">
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.5 }}
            className="text-2xl font-bold text-blue-700"
          >
            Dev<span className="text-blue-900">Portfolio</span>
          </motion.div>

          {/* Desktop Navigation */}
          <motion.div
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.5 }}
            className="hidden md:flex space-x-6"
          >
            {["home", "about", "skills", "projects", "contact"].map((item) => (
              <button
                key={item}
                onClick={() => scrollToSection(item)}
                className={`text-sm font-medium capitalize transition-colors hover:text-blue-700 ${
                  activeSection === item ? "text-blue-700" : "text-gray-700"
                }`}
              >
                {item}
                {activeSection === item && (
                  <motion.div
                    layoutId="navIndicator"
                    className="h-1 bg-blue-500 rounded-full mt-1"
                  />
                )}
              </button>
            ))}
          </motion.div>

          {/* Mobile Menu Button */}
          <button
            className="block md:hidden text-gray-700"
            onClick={() => setIsMenuOpen(!isMenuOpen)}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              strokeWidth={1.5}
              stroke="currentColor"
              className="w-6 h-6"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d={
                  isMenuOpen
                    ? "M6 18L18 6M6 6l12 12"
                    : "M3.75 6.75h16.5M3.75 12h16.5M3.75 17.25h16.5"
                }
              />
            </svg>
          </button>
        </div>

        {/* Mobile Menu */}
        <AnimatePresence>
          {isMenuOpen && (
            <motion.div
              initial={{ opacity: 0, height: 0 }}
              animate={{ opacity: 1, height: "auto" }}
              exit={{ opacity: 0, height: 0 }}
              className="bg-white md:hidden"
            >
              <div className="container mx-auto px-6 py-4 flex flex-col space-y-4">
                {["home", "about", "skills", "projects", "contact"].map(
                  (item) => (
                    <button
                      key={item}
                      onClick={() => scrollToSection(item)}
                      className={`text-sm font-medium capitalize transition-colors hover:text-blue-700 ${
                        activeSection === item
                          ? "text-blue-700"
                          : "text-gray-700"
                      }`}
                    >
                      {item}
                    </button>
                  )
                )}
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </nav>

      {/* Hero Section */}
      <section
        id="home"
        className="min-h-screen bg-gradient-to-br from-blue-50 to-white flex items-center relative overflow-hidden"
      >
        {/* Background elements */}
        <div className="absolute inset-0 overflow-hidden opacity-20">
          <div className="absolute top-1/4 left-1/4 w-64 h-64 rounded-full bg-blue-400 blur-3xl"></div>
          <div className="absolute bottom-1/3 right-1/4 w-80 h-80 rounded-full bg-blue-300 blur-3xl"></div>
        </div>

        {/* Grid background */}
        <div className="absolute inset-0 bg-grid opacity-10"></div>

        <div className="container mx-auto px-6 py-12 flex flex-col-reverse md:flex-row items-center gap-8 z-10">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="flex-1"
          >
            <div className="space-y-6">
              <h1 className="text-4xl md:text-6xl font-bold text-blue-900 leading-tight">
                Creative <span className="text-blue-600">Full-Stack</span> Web
                Developer
              </h1>
              <p className="text-lg text-gray-600 max-w-lg">
                Building beautiful, interactive, and performance-optimized web
                applications with modern technologies.
              </p>
              <div className="flex flex-wrap gap-4">
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="px-6 py-3 bg-blue-600 text-white rounded-full font-medium shadow-lg hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                  onClick={() => scrollToSection("projects")}
                >
                  View My Work
                </motion.button>
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="px-6 py-3 bg-white text-blue-700 border border-blue-200 rounded-full font-medium shadow-lg hover:bg-blue-50 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                  onClick={() => scrollToSection("contact")}
                >
                  Contact Me
                </motion.button>
              </div>
              <div className="flex gap-4 pt-4">
                <Tooltip content="GitHub">
                  <a
                    href="#"
                    className="text-gray-600 hover:text-blue-700 transition-colors"
                  >
                    <FaGithub size={24} />
                  </a>
                </Tooltip>
                <Tooltip content="LinkedIn">
                  <a
                    href="#"
                    className="text-gray-600 hover:text-blue-700 transition-colors"
                  >
                    <FaLinkedin size={24} />
                  </a>
                </Tooltip>
                <Tooltip content="Twitter">
                  <a
                    href="#"
                    className="text-gray-600 hover:text-blue-700 transition-colors"
                  >
                    <FaTwitter size={24} />
                  </a>
                </Tooltip>
                <Tooltip content="Email">
                  <a
                    href="#"
                    className="text-gray-600 hover:text-blue-700 transition-colors"
                  >
                    <FaEnvelope size={24} />
                  </a>
                </Tooltip>
              </div>
            </div>
          </motion.div>
          <motion.div
            initial={{ opacity: 0, scale: 0.8 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.5, delay: 0.3 }}
            className="flex-1 flex justify-center"
          >
            <div className="relative">
              <div className="w-64 h-64 md:w-80 md:h-80 bg-blue-600 rounded-full overflow-hidden border-4 border-white shadow-xl">
                <div className="w-full h-full bg-gradient-to-br from-blue-400 to-blue-700 flex items-center justify-center text-white text-9xl">
                  <FaCode />
                </div>
              </div>
              <div className="absolute -bottom-4 -right-4 bg-white rounded-full p-4 shadow-lg">
                <SiNextdotjs size={32} className="text-blue-900" />
              </div>
              <div className="absolute -top-4 -left-4 bg-white rounded-full p-4 shadow-lg">
                <SiReact size={32} className="text-blue-500" />
              </div>
            </div>
          </motion.div>
        </div>

        <div className="absolute bottom-10 left-1/2 transform -translate-x-1/2 animate-bounce">
          <button
            onClick={() => scrollToSection("about")}
            className="text-gray-400 hover:text-blue-600 transition-colors"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              strokeWidth={1.5}
              stroke="currentColor"
              className="w-6 h-6"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d="M19.5 13.5L12 21m0 0l-7.5-7.5M12 21V3"
              />
            </svg>
          </button>
        </div>
      </section>

      {/* About Section */}
      <section id="about" className="py-20 bg-white">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5 }}
            className="mb-16 text-center"
          >
            <h2 className="text-3xl md:text-4xl font-bold text-blue-900 mb-4">
              About Me
            </h2>
            <div className="w-20 h-1 bg-blue-500 mx-auto"></div>
          </motion.div>

          <div className="flex flex-col md:flex-row gap-12 items-center">
            <motion.div
              initial={{ opacity: 0, x: -20 }}
              whileInView={{ opacity: 1, x: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5 }}
              className="flex-1"
            >
              <h3 className="text-2xl font-bold text-blue-800 mb-6">
                Who am I?
              </h3>
              <div className="space-y-4 text-gray-600">
                <p>
                  I&apos;m a passionate Full-Stack Developer with a strong focus
                  on creating modern, responsive, and user-friendly web
                  applications. With over 5 years of experience in web
                  development, I&apos;ve worked on a variety of projects ranging
                  from small business websites to large-scale enterprise
                  applications.
                </p>
                <p>
                  My expertise lies in the JavaScript ecosystem, particularly
                  with React, Next.js, and Node.js. I believe in writing clean,
                  maintainable code and following best practices to deliver
                  high-quality solutions that meet client needs.
                </p>
                <p>
                  When I&apos;m not coding, you can find me exploring new
                  technologies, contributing to open-source projects, or sharing
                  my knowledge through blog posts and community forums.
                </p>
              </div>

              <div className="mt-8 grid grid-cols-2 gap-4">
                <div>
                  <h4 className="text-blue-900 font-bold mb-2">Education</h4>
                  <p className="text-gray-600">
                    BSc Computer Science
                    <br />
                    University of Technology
                  </p>
                </div>
                <div>
                  <h4 className="text-blue-900 font-bold mb-2">Experience</h4>
                  <p className="text-gray-600">
                    5+ Years
                    <br />
                    Full-Stack Development
                  </p>
                </div>
              </div>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, x: 20 }}
              whileInView={{ opacity: 1, x: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5, delay: 0.2 }}
              className="flex-1"
            >
              <div className="relative">
                <div className="relative z-10 bg-white p-6 rounded-lg shadow-xl">
                  <h3 className="text-2xl font-bold text-blue-800 mb-6">
                    My Services
                  </h3>

                  <div className="space-y-6">
                    <div className="flex items-start">
                      <div className="flex-shrink-0 mt-1">
                        <div className="w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center text-blue-600">
                          <FaLaptopCode />
                        </div>
                      </div>
                      <div className="ml-4">
                        <h4 className="text-lg font-semibold text-blue-900">
                          Frontend Development
                        </h4>
                        <p className="text-gray-600 mt-1">
                          Creating responsive, interactive UI with React,
                          Next.js, and modern CSS frameworks.
                        </p>
                      </div>
                    </div>

                    <div className="flex items-start">
                      <div className="flex-shrink-0 mt-1">
                        <div className="w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center text-blue-600">
                          <FaServer />
                        </div>
                      </div>
                      <div className="ml-4">
                        <h4 className="text-lg font-semibold text-blue-900">
                          Backend Development
                        </h4>
                        <p className="text-gray-600 mt-1">
                          Building robust APIs and server-side applications with
                          Node.js and database technologies.
                        </p>
                      </div>
                    </div>

                    <div className="flex items-start">
                      <div className="flex-shrink-0 mt-1">
                        <div className="w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center text-blue-600">
                          <FaCode />
                        </div>
                      </div>
                      <div className="ml-4">
                        <h4 className="text-lg font-semibold text-blue-900">
                          Full-Stack Solutions
                        </h4>
                        <p className="text-gray-600 mt-1">
                          Delivering end-to-end web applications with seamless
                          integration between frontend and backend.
                        </p>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Background decoration */}
                <div className="absolute top-6 left-6 w-full h-full bg-blue-100 rounded-lg -z-10"></div>
              </div>
            </motion.div>
          </div>
        </div>
      </section>

      {/* Skills Section */}
      <section
        id="skills"
        className="py-20 bg-gradient-to-r from-blue-800 to-blue-600 text-white"
      >
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5 }}
            className="mb-16 text-center"
          >
            <h2 className="text-3xl md:text-4xl font-bold mb-4">My Skills</h2>
            <div className="w-20 h-1 bg-white mx-auto"></div>
          </motion.div>

          <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-8">
            <Skill icon={<SiReact />} name="React" level="Advanced" />
            <Skill icon={<SiNextdotjs />} name="Next.js" level="Advanced" />
            <Skill
              icon={<SiTailwindcss />}
              name="Tailwind CSS"
              level="Advanced"
            />
            <Skill icon={<SiJavascript />} name="JavaScript" level="Advanced" />
            <Skill
              icon={<SiTypescript />}
              name="TypeScript"
              level="Intermediate"
            />
            <Skill icon={<SiNodedotjs />} name="Node.js" level="Advanced" />
            <Skill icon={<SiMongodb />} name="MongoDB" level="Intermediate" />
            <Skill
              icon={<SiPostgresql />}
              name="PostgreSQL"
              level="Intermediate"
            />
            <Skill icon={<FaServer />} name="REST APIs" level="Advanced" />
            <Skill icon={<FaCode />} name="GraphQL" level="Intermediate" />
            <Skill icon={<FaLaptopCode />} name="UI/UX" level="Intermediate" />
            <Skill icon={<FaGithub />} name="Git/GitHub" level="Advanced" />
          </div>
        </div>
      </section>

      {/* Projects Section */}
      <section id="projects" className="py-20 bg-gray-50">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5 }}
            className="mb-16 text-center"
          >
            <h2 className="text-3xl md:text-4xl font-bold text-blue-900 mb-4">
              My Projects
            </h2>
            <div className="w-20 h-1 bg-blue-500 mx-auto"></div>
            <p className="mt-4 text-gray-600 max-w-2xl mx-auto">
              Here are some of my recent projects. Each one was built with
              attention to detail, performance, and user experience.
            </p>
          </motion.div>

          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {projects.map((project, index) => (
              <ProjectCard key={index} {...project} delay={index * 0.1} />
            ))}
          </div>
        </div>
      </section>

      {/* Contact Section */}
      <section id="contact" className="py-20 bg-white">
        <div className="container mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5 }}
            className="mb-16 text-center"
          >
            <h2 className="text-3xl md:text-4xl font-bold text-blue-900 mb-4">
              Get In Touch
            </h2>
            <div className="w-20 h-1 bg-blue-500 mx-auto"></div>
            <p className="mt-4 text-gray-600 max-w-2xl mx-auto">
              Have a question or want to work together? Feel free to reach out.
              I&apos;m always open to discussing new projects, creative ideas,
              or opportunities to be part of your vision.
            </p>
          </motion.div>

          <div className="max-w-4xl mx-auto">
            <div className="grid md:grid-cols-2 gap-8">
              <motion.div
                initial={{ opacity: 0, x: -20 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.5 }}
                className="bg-gradient-to-br from-blue-600 to-blue-700 text-white p-8 rounded-lg shadow-xl relative overflow-hidden"
              >
                <div className="absolute top-0 right-0 w-40 h-40 bg-blue-500 opacity-20 rounded-full transform translate-x-1/2 -translate-y-1/2"></div>
                <div className="absolute bottom-0 left-0 w-32 h-32 bg-blue-500 opacity-20 rounded-full transform -translate-x-1/2 translate-y-1/2"></div>

                <h3 className="text-2xl font-bold mb-6 relative z-10">
                  Contact Information
                </h3>

                <div className="space-y-4 relative z-10">
                  <div className="flex items-center">
                    <div className="w-10 h-10 rounded-full bg-blue-500 flex items-center justify-center">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        strokeWidth={1.5}
                        stroke="currentColor"
                        className="w-5 h-5"
                      >
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          d="M21.75 6.75v10.5a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25m19.5 0v.243a2.25 2.25 0 01-1.07 1.916l-7.5 4.615a2.25 2.25 0 01-2.36 0L3.32 8.91a2.25 2.25 0 01-1.07-1.916V6.75"
                        />
                      </svg>
                    </div>
                    <div className="ml-4">
                      <p className="text-sm opacity-75">Email</p>
                      <a
                        href="mailto:info@example.com"
                        className="font-medium hover:underline"
                      >
                        info@example.com
                      </a>
                    </div>
                  </div>

                  <div className="flex items-center">
                    <div className="w-10 h-10 rounded-full bg-blue-500 flex items-center justify-center">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        strokeWidth={1.5}
                        stroke="currentColor"
                        className="w-5 h-5"
                      >
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          d="M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 002.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 01-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 00-1.091-.852H4.5A2.25 2.25 0 002.25 4.5v2.25z"
                        />
                      </svg>
                    </div>
                    <div className="ml-4">
                      <p className="text-sm opacity-75">Phone</p>
                      <a
                        href="tel:+1234567890"
                        className="font-medium hover:underline"
                      >
                        +1 (234) 567-890
                      </a>
                    </div>
                  </div>

                  <div className="flex items-center">
                    <div className="w-10 h-10 rounded-full bg-blue-500 flex items-center justify-center">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        strokeWidth={1.5}
                        stroke="currentColor"
                        className="w-5 h-5"
                      >
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          d="M15 10.5a3 3 0 11-6 0 3 3 0 016 0z"
                        />
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          d="M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1115 0z"
                        />
                      </svg>
                    </div>
                    <div className="ml-4">
                      <p className="text-sm opacity-75">Location</p>
                      <p className="font-medium">San Francisco, CA</p>
                    </div>
                  </div>
                </div>

                <div className="mt-8 flex gap-4 relative z-10">
                  <a
                    href="#"
                    className="w-10 h-10 rounded-full bg-white bg-opacity-20 hover:bg-opacity-30 flex items-center justify-center transition-colors"
                  >
                    <FaGithub className="text-white" />
                  </a>
                  <a
                    href="#"
                    className="w-10 h-10 rounded-full bg-white bg-opacity-20 hover:bg-opacity-30 flex items-center justify-center transition-colors"
                  >
                    <FaLinkedin className="text-white" />
                  </a>
                  <a
                    href="#"
                    className="w-10 h-10 rounded-full bg-white bg-opacity-20 hover:bg-opacity-30 flex items-center justify-center transition-colors"
                  >
                    <FaTwitter className="text-white" />
                  </a>
                </div>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, x: 20 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.5, delay: 0.2 }}
              >
                <form className="bg-white p-8 rounded-lg shadow-lg border border-gray-100">
                  <h3 className="text-2xl font-bold text-blue-900 mb-6">
                    Send a Message
                  </h3>

                  <div className="space-y-4">
                    <div>
                      <label
                        htmlFor="name"
                        className="block text-sm font-medium text-gray-700 mb-1"
                      >
                        Name
                      </label>
                      <input
                        type="text"
                        id="name"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                        placeholder="Your name"
                      />
                    </div>

                    <div>
                      <label
                        htmlFor="email"
                        className="block text-sm font-medium text-gray-700 mb-1"
                      >
                        Email
                      </label>
                      <input
                        type="email"
                        id="email"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                        placeholder="your.email@example.com"
                      />
                    </div>

                    <div>
                      <label
                        htmlFor="subject"
                        className="block text-sm font-medium text-gray-700 mb-1"
                      >
                        Subject
                      </label>
                      <input
                        type="text"
                        id="subject"
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                        placeholder="Subject of your message"
                      />
                    </div>

                    <div>
                      <label
                        htmlFor="message"
                        className="block text-sm font-medium text-gray-700 mb-1"
                      >
                        Message
                      </label>
                      <textarea
                        id="message"
                        rows={5}
                        className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none"
                        placeholder="Your message here..."
                      ></textarea>
                    </div>

                    <motion.button
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      className="w-full bg-blue-600 text-white py-3 rounded-lg font-medium shadow-md hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                    >
                      Send Message
                    </motion.button>
                  </div>
                </form>
              </motion.div>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-blue-900 text-white py-12">
        <div className="container mx-auto px-6">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="mb-6 md:mb-0">
              <div className="text-2xl font-bold">
                Dev<span className="text-blue-400">Portfolio</span>
              </div>
              <p className="mt-2 text-blue-200 max-w-md">
                Building modern web experiences with cutting-edge technologies.
              </p>
            </div>

            <div className="flex flex-col items-center md:items-end">
              <div className="flex gap-4 mb-4">
                <a
                  href="#"
                  className="text-blue-200 hover:text-white transition-colors"
                >
                  <FaGithub size={20} />
                </a>
                <a
                  href="#"
                  className="text-blue-200 hover:text-white transition-colors"
                >
                  <FaLinkedin size={20} />
                </a>
                <a
                  href="#"
                  className="text-blue-200 hover:text-white transition-colors"
                >
                  <FaTwitter size={20} />
                </a>
                <a
                  href="#"
                  className="text-blue-200 hover:text-white transition-colors"
                >
                  <FaEnvelope size={20} />
                </a>
              </div>
              <p className="text-blue-300 text-sm">
                &copy; {new Date().getFullYear()} Developer Portfolio. All
                rights reserved.
              </p>
            </div>
          </div>
        </div>
      </footer>

      {/* Back to top button */}
      <AnimatePresence>
        {isScrolled && (
          <motion.button
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 20 }}
            onClick={() => window.scrollTo({ top: 0, behavior: "smooth" })}
            className="fixed bottom-6 right-6 w-12 h-12 rounded-full bg-blue-600 text-white shadow-lg flex items-center justify-center z-50 hover:bg-blue-700 transition-colors"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              strokeWidth={2}
              stroke="currentColor"
              className="w-6 h-6"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d="M4.5 10.5L12 3m0 0l7.5 7.5M12 3v18"
              />
            </svg>
          </motion.button>
        )}
      </AnimatePresence>

      {/* CSS Styles */}
      <style jsx>{`
        /* Grid background */
        .bg-grid {
          background-image: linear-gradient(
              to right,
              rgba(59, 130, 246, 0.1) 1px,
              transparent 1px
            ),
            linear-gradient(
              to bottom,
              rgba(59, 130, 246, 0.1) 1px,
              transparent 1px
            );
          background-size: 20px 20px;
        }

        /* Hover animation for project cards */
        .project-card::before {
          content: "";
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: linear-gradient(
            to right,
            rgba(59, 130, 246, 0.1),
            transparent
          );
          transform: translateX(-100%);
          transition: transform 0.5s ease;
        }

        .project-card:hover::before {
          transform: translateX(0);
        }

        /* Input focus animation */
        input:focus,
        textarea:focus {
          animation: pulse 1.5s infinite;
        }

        @keyframes pulse {
          0% {
            box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
          }
          70% {
            box-shadow: 0 0 0 6px rgba(59, 130, 246, 0);
          }
          100% {
            box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
          }
        }

        /* Shimmer effect */
        .shimmer {
          position: relative;
          overflow: hidden;
        }

        .shimmer::after {
          content: "";
          position: absolute;
          top: 0;
          left: -100%;
          width: 50%;
          height: 100%;
          background: linear-gradient(
            to right,
            transparent,
            rgba(255, 255, 255, 0.3),
            transparent
          );
          transform: skewX(-25deg);
          animation: shimmer 3s infinite;
        }

        @keyframes shimmer {
          100% {
            left: 150%;
          }
        }
      `}</style>
    </>
  );
}
